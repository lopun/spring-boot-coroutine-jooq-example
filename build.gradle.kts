/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */

plugins {
  idea
  kotlin("jvm") version Ver.kotlin
  kotlin("kapt") version Ver.kotlin
  id(Plugin.kotlinSpring) version Ver.kotlin
  id(Plugin.springBoot) version Ver.springBoot apply false
  id(Plugin.springDependencyManagement) version Ver.springDependencyManagement apply false
}

allprojects {
  group = "co.lopun"
  version = "0.0.1-SNAPSHOT"

  repositories {
    mavenCentral()
    jcenter()
    maven {
      url = uri("http://dl.bintray.com/mbuhot/maven")
      url = uri("https://dl.bintray.com/konrad-kaminski/maven")
    }
    maven("https://plugins.gradle.org/m2/")
  }
}

subprojects {
  apply(plugin = Plugin.idea)
  apply(plugin = Plugin.kotlin)
  apply(plugin = Plugin.kotlinSpring)
  apply(plugin = Plugin.springDependencyManagement)
  apply(plugin = Plugin.springBoot)

  @Suppress("UnstableApiUsage")
  configure<JavaPluginExtension> {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
  }

  tasks {
    compileKotlin {
      kotlinOptions {
        freeCompilerArgs = listOf("-Xjsr305=strict")
        jvmTarget = "11"
      }
      dependsOn(processResources)
    }

    withType<Test> {
      @Suppress("UnstableApiUsage")
      useJUnitPlatform()
    }

    compileTestKotlin {
      kotlinOptions {
        freeCompilerArgs = listOf("-Xjsr305=strict")
        jvmTarget = "11"
      }
    }
  }

  dependencies {
    implementation(kotlin("reflect"))
    implementation(kotlin("stdlib-jdk8"))
    implementation(springBootDependencies())
    implementation(springBoot("spring-boot-starter-webflux"))
    runtimeOnly(springBoot("spring-boot-devtools"))
    implementation(kotlinx("kotlinx-coroutines-core"))
    implementation(kotlinx("kotlinx-coroutines-reactor"))
    implementation(kotlinx("kotlinx-coroutines-jdk8"))

    implementation(gson())
    implementation(mysqlConnectorJava())

    testImplementation(springBoot("spring-boot-starter-test")) {
      exclude(module = "junit-vintage-engine")
    }
  }
}
